{"version":3,"file":"static/js/516.147c5a6b.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","assets/components/FAQ.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null || onSelect(eventKeyPassed, e);\n    onClick == null || onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  'aria-controls': ariaControls,\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      \"aria-controls\": ariaControls,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import React from 'react'\r\nimport {  Container, Accordion, Button } from 'react-bootstrap';\r\n\r\nfunction FAQ() {\r\n  return (\r\n    <div>\r\n      <Container className=\"my-5\">\r\n      <p style={{ color: \"#EB8D15\" }}>FAQ</p>\r\n        <h2 className=\"text-center mb-4\"> \r\n        Frequent Ask Questions </h2>\r\n        <Accordion defaultActiveKey=\"0\">\r\n        \r\n        <Accordion.Item eventKey=\"0\">\r\n            <Accordion.Header>What file types can I recover?</Accordion.Header>\r\n            <Accordion.Body>\r\n              This software supports  .\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n \r\n          <Accordion.Item eventKey=\"1\">\r\n            <Accordion.Header>What file types can I recover?</Accordion.Header>\r\n            <Accordion.Body>\r\n              This software supports  .\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n       \r\n          <Accordion.Item eventKey=\"2\">\r\n            <Accordion.Header>What file types can I recover?</Accordion.Header>\r\n            <Accordion.Body>\r\n              This software supports  .\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n          <Accordion.Item eventKey=\"3\">\r\n            <Accordion.Header>What file types can I recover?</Accordion.Header>\r\n            <Accordion.Body>\r\n              This software supports .\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n\r\n          <Accordion.Item eventKey=\"4\">\r\n            <Accordion.Header>What file types can I recover?</Accordion.Header>\r\n            <Accordion.Body>\r\n              This software supports  .\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n          <Accordion.Item eventKey=\"5\">\r\n            <Accordion.Header>What file types can I recover?</Accordion.Header>\r\n            <Accordion.Body>\r\n              This software supports  .\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n        </Accordion>\r\n        <div className=\"text-center mt-4\">\r\n          <Button variant=\"primary\">Show more FAQs</Button>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FAQ"],"names":["isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","React","displayName","_excluded","AccordionCollapse","_ref","ref","as","Component","bsPrefix","className","children","props","_objectWithoutProperties","useContext","AccordionContext","useBootstrapPrefix","_jsx","Collapse","_objectSpread","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","onClick","accordionOnClick","onSelect","alwaysOpen","e","eventKeyPassed","filter","k","useAccordionButton","type","AccordionHeader","ariaControls","AccordionItem","contextValue","useMemo","Provider","value","Accordion","_useUncontrolled","useUncontrolled","activeKey","flush","controlledProps","prefix","concat","Object","assign","Button","Item","Header","Body","_jsxs","Container","style","color","defaultActiveKey","variant"],"sourceRoot":""}